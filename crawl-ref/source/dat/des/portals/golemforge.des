###############################################################################
#
# The Forge of Golems (youredoomed)
#
# Lots of Golems, High AC + High reisitance + MagImmune
# Imporant: Rewards are Randart only!!
#
###############################################################################

{{
function golemforge_portal(e)
  local timeout_turns = crawl.random_range(600, 800)

  local messager =
    timed_msg {
      initmsg = { "You hear a sound of hammering.",
                  "There is an entrance to the golemforge on this level. "
                  .. "Hurry and find it before the portal disappears!" },
      finalmsg = "A sound of hammering is finaly fades away.",
      verb = 'ringing',
      noisemaker = 'sound of hammering',
      ranges = {
        { 5000, 'faint ' },  { 4000, '' },
        { 2500, 'steady ' }, { 1500, 'quick ' },
        { 0, 'loud ' }
      }
    }

  e.lua_marker('O',
      timed_marker {
        disappear = "The gateway is sealed and disappears.",
        entity = 'gateway',
        turns = timeout_turns,
        single_timed = true,
        floor = "expired_portal",
        feat_tile = "dngn_portal_golem_gone",
        msg = messager })
  e.tags("uniq_golemforge chance_golemforge")
  e.chance(500)
  e.kfeat("O = enter_golem")
  e.kfeat("X = permarock_wall")
  e.kfeat("x = crystal_wall")
  e.rtile("x = dngn_crystal_lightblue")
  e.colour("X = blue")
  e.colour(".1234x = lightblue")
  e.ftile(".'12345O+xX = floor_crystal_squares")
end

function golemforge_appearance(e)
  e.kprop("aABbCcD+xXLrmh = no_tele_into")
  e.kfeat("< = exit_golem")
  e.kfeat("X = permarock_wall")
  e.kfeat("x = crystal_wall")
  e.rtile("x_ = dngn_crystal_lightblue")
  e.colour("X = blue")
  e.colour(".x123nwe_ = lightblue")
  e.ftile(".'aABbCcDO+xX123nwe_t = floor_crystal_squares")
end

function callback.golemforge_phase_one(data, triggerable, triggerer, marker, ev)

  if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
    return
  end

  if dgn.persist.golemforge_progress_one == true then
    return
  end

  dgn.persist.golemforge_progress_one = true

  local x, y = marker:pos()

  for p in iter.slave_iterator("feat_remove_one", 1) do
    dgn.terrain_changed(p.x, p.y, "floor", false)
  end

  local nguard1 = 0
  local guardarray = {}
  local wander = mons.behaviour("wander")
  for p in iter.slave_iterator("spawn_point1", 1) do
    local guard1 = dgn.create_monster(p.x, p.y, "generate_awake crystal guardian")
    if guard1 then
      nguard1 = nguard1 + 1
      guardarray[nguard1] = guard1
    end
  end
  view.update_monsters()
  for i = 1, nguard1 do
    local guard1 = guardarray[i]
    guard1.beh = wander
  end
  crawl.mpr("You feel vibrations from the crystals here...", "warning")
end

function callback.golemforge_phase_two(data, triggerable, triggerer, marker, ev)

  if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
    return
  end

  if dgn.persist.golemforge_progress_two == true then
    return
  end

  dgn.persist.golemforge_progress_two = true

  local x, y = marker:pos()

  for p in iter.slave_iterator("feat_remove_two", 1) do
    dgn.terrain_changed(p.x, p.y, "floor", false)
  end

  local nguard2 = 0
  local guardarray = {}
  local wander = mons.behaviour("wander")
  for p1 in iter.slave_iterator("spawn_point2a", 1) do
    local guard2a = dgn.create_monster(p1.x, p1.y, "generate_awake iron golem col:lightred \
            name:orange_crystal_golem n_rpl n_des n_spe tile:mons_golemforge_crystal_golem \
            spells:brain_feed.24.natural;draining_gaze.24.natural")
    if guard2a then
      nguard2 = nguard2 + 1
      guardarray[nguard2] = guard2a
    end
  end
  for p2 in iter.slave_iterator("spawn_point2b", 1) do
    local guard2b = dgn.create_monster(p2.x, p2.y, "generate_awake iron golem col:green \
            name:plutonium_golem n_rpl n_des n_spe tile:mons_golemforge_plutonium_golem \
            spells:corrupting_pulse.30.natural")
    if guard2b then
      nguard2 = nguard2 + 1
      guardarray[nguard2] = guard2b
    end
  end
  for p3 in iter.slave_iterator("spawn_point2c", 1) do
    local guard2 = dgn.create_monster(p3.x, p3.y, "generate_awake iron golem col:red \
            perm_ench:inner_flame name:lava_golem n_rpl n_des n_spe tile:mons_golemforge_lava_golem \
            spells:bolt_of_magma.24.natural;sticky_flame.100.natural.instant")
    if guard2c then
      nguard2 = nguard2 + 1
      guardarray[nguard2] = guard2c
    end
  end
  view.update_monsters()
  for i = 1, nguard2 do
    local guard2a = guardarray[i]
    guard2a.beh = wander
    local guard2b = guardarray[i]
    guard2b.beh = wander
    local guard2c = guardarray[i]
    guard2c.beh = wander
  end

  crawl.mpr("You feel the magic gathered into the furnace...", "warning")
end

function callback.golemforge_phase_three(data, triggerable, triggerer, marker, ev)

  if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
    return
  end

  if dgn.persist.golemforge_progress_three == true then
    return
  end

  dgn.persist.golemforge_progress_three = true

  local x, y = marker:pos()

  for p in iter.slave_iterator("feat_remove_three", 1) do
    dgn.terrain_changed(p.x, p.y, "floor", false)
  end

  local nguard3 = 0
  local guardarray = {}
  local wander = mons.behaviour("wander")
  for p in iter.slave_iterator("spawn_point3", 1) do
    local guard3 = dgn.create_monster(p.x, p.y, "generate_awake animated armour \
            hd:18 hp:500 col:cyan \
            name:crystal_sniper n_rpl n_des n_spe tile:mons_golemforge_crystal_sniper \
            spells:lehudib's_crystal_spear.30.wizard")
    if guard3 then
      nguard3 = nguard3 + 1
      guardarray[nguard3] = guard3
    end
  end
  view.update_monsters()
  for i = 1, nguard3 do
    local guard3 = guardarray[i]
    guard3.beh = wander
  end

  crawl.mpr("You feel sharp hostility from the Forge...", "warning")
end

function callback.golemforge_prevent_spamming(data, triggerable,
                                         triggerer, marker, ev)

  if triggerer.type ~= "turn" or triggerer.sub_type ~= "countdown" then
    return
  end

  if dgn.persist.golemforge_check_spamming == true then
    return
  end

  dgn.persist.golemforge_check_spamming = true

  local x, y = marker:pos()

  for p in iter.slave_iterator("feat_remove_spam", 1) do
    dgn.terrain_changed(p.x, p.y, "floor", false)
  end

  local nguard = 0
  local guardarray = {}
  local wander = mons.behaviour("wander")
  for p in iter.slave_iterator("spawn_spam", 1) do
    local guard = dgn.create_monster(p.x, p.y, "generate_awake electric golem \
            hd:16 hp:1500 perm_ench:flight \
            col:yellow name:barrier_golem n_rpl n_des n_spe \
            tile:mons_golemforge_barrier_golem \
            spells:mass_barrier.33.magical;blinkbolt.33.magical;lightning_bolt.33.magical")
    if guard then
      nguard = nguard + 1
      guardarray[nguard] = guard
    end
  end
  view.update_monsters()
  for i = 1, nguard do
    local guard = guardarray[i]
    guard.beh = wander
  end
  crawl.mpr("You hear the walls rumbling! You feel something dangerous...", "warning")
end

}}
# Entries ##########################################
default-depth: Elf, Depths:1-4

NAME:   portal_golemforge_entry_1
TAGS:   transparent
DEPTH:  Elf, Depths:1-4
: golemforge_portal(_G)
: set_feature_name("crystal_wall", "wall of crystal")
MAP
     .
    x.x
  xxx.xxx
 xx.....xx
.....O.....
 xx.....xx
  xxx.xxx
    x.x
     .
ENDMAP

NAME:   portal_golemforge_entry_2
TAGS:   no_mons_gen
DEPTH:  Elf, Depths:1-4
KFEAT:  h = abandoned_shop
FTILE:  h = floor_crystal_squares
COLOUR: h = lightblue
: golemforge_portal(_G)
: set_feature_name("crystal_wall", "wall of crystal")
MAP
   ......
...xxxxx.
.xxx.h.x.
.+..hOhx.
.xxx.h.x.
...xxxxx.
   ......
ENDMAP

NAME:   portal_golemforge_entry_3
TAGS:   no_mons_gen
DEPTH:  Elf
KMONS:  y = crystal guardian
KMONS:  e = deep elf sorcerer col:lightblue name:deep_elf_golemsmith n_rpl n_des n_spe \
        tile:mons_deep_elf \
        spells:hermetic_barrier.66.wizard.emergency;blink.20.wizard;bolt_of_cold.40.wizard ;\
        robe . any wand good_item
FTILE:  ye = floor_crystal_squares
COLOUR: ye = lightblue
KFEAT:  L = lava
TILE:   L = dngn_golemforge_furnace
: golemforge_portal(_G)
: set_feature_name("crystal_wall", "wall of crystal")
: set_feature_name("lava", "arcane furnace")
MAP
xxxxxxxxx
xLLLOLLLx
xLx...xLx
xL..e..Lx
xL.y.y.Lx
xL.....Lx
xLx...xLx
xLL...LLx
xxx@@@xxx
ENDMAP

NAME:   portal_golemforge_entry_4
TAGS:   no_mons_gen
DEPTH:  Depths:1-4
KMONS:  i = iron golem
KMONS:  s = statue hd:12 spells:mass_barrier.12.magical \
            tile:mons_statue_mage col:lightblue name:barrier n_adj
FTILE:  is = floor_crystal_squares
COLOUR: is = lightblue
KFEAT:  L = lava
TILE:   L = dngn_golemforge_furnace
: golemforge_portal(_G)
: set_feature_name("crystal_wall", "wall of crystal")
: set_feature_name("lava", "arcane furnace")
MAP 
xxxxxxxxxxxxxxx
xLLLx.....xLLLx
xxxxL..O..Lxxxx
   xxL.s.Lxx
  xx.......xx
  xx.i.i.i.xx
   xx.....xx
    xx...xx
     xx+xx
       @
ENDMAP

# The destination #################################

default-depth: Golemforge

NAME:   golemforge_main
TAGS:   no_item_gen no_mons_gen no_trap_gen
ORIENT: encompass
KMONS: i = iron golem
KMONS: y = crystal guardian
KMONS: S = lightning spire hd:12 col:lightgreen name:repair_machine n_rpl n_des n_spe \
            tile:mons_golemforge_repair_machine \
            spells:aura_of_healing.70.magical;warning_cry.30.magical
KMONS: m = animated armour tile:mons_golemforge_armour_golem spells:none \
            ; double sword randart . buckler randart |\
            broad axe randart . shield randart |\
            eveningstar randart . large shield randart |\
            demon trident randart . javelin ego:silver q:4 |\
            lajatang randart . throwing net q:1 |\
            quick blade randart . dart ego:curare q:20 |\
            longbow randart. arrow q:40 |\
            triple crossbow randart . bolt q:40 |\
            fustibalus randart . sling bullet q:40 |\
            triple sword randart | bardiche randart |\
            executioner's axe randart | great mace randart .\
            crystal plate armour randart | robe randart |\
            fire dragon scales randart | ice dragon scales randart | storm dragon scales randart |\
            pearl dragon scales randart | swamp dragon scales randart | steam dragon scales randart |\
            acid dragon scales randart | shadow dragon scales randart | quicksilver dragon scales randart
FTILE:  iySmAaBbCcDtnGPHe' = floor_crystal_squares
COLOUR: iySmAaBbCcDtnGPHe' = lightblue
KFEAT:  Lm = lava
TILE:   Lm = dngn_golemforge_furnace
KFEAT:  A = stone_arch
KFEAT:  h = abandoned_shop
KFEAT:  123 = crystal_wall
RTILE:  123 = dngn_crystal_lightblue
COLOUR: 123 = lightblue
KFEAT:  t = clear_permarock_wall
COLOUR: t = yellow
{{
dgn.persist.golemforge_progress_one = false
dgn.persist.golemforge_progress_two = false
dgn.persist.golemforge_progress_three = false
dgn.persist.golemforge_check_spamming = false

local one = TriggerableFunction:new{func="callback.golemforge_phase_one", repeated = true}
local two = TriggerableFunction:new{func="callback.golemforge_phase_two", repeated = true}
local three = TriggerableFunction:new{func="callback.golemforge_phase_three", repeated = true}
local antispam = TriggerableFunction:new{func="callback.golemforge_prevent_spamming", repeated = true}

one:add_triggerer(DgnTriggerer:new { type="turn", delay_min=200000, delay_max=300000})
two:add_triggerer(DgnTriggerer:new { type="turn", delay_min=400000, delay_max=500000})
three:add_triggerer(DgnTriggerer:new { type="turn", delay_min=700000, delay_max=800000})
antispam:add_triggerer(DgnTriggerer:new { type="turn", delay_min=1000000, delay_max=1100000})

lua_marker('1', one)
lua_marker('n', props_marker {spawn_point1 = 1})
lua_marker('1', props_marker {feat_remove_one = 1})

lua_marker('2', two)
lua_marker('G', props_marker {spawn_point2a = 1})
lua_marker('P', props_marker {spawn_point2b = 1})
lua_marker('F', props_marker {spawn_point2c = 1})
lua_marker('2', props_marker {feat_remove_two = 1})

lua_marker('3', three)
lua_marker('e', props_marker {spawn_point3 = 1})
lua_marker('3', props_marker {feat_remove_three = 1})

lua_marker('t', antispam)
lua_marker('_', props_marker {spawn_spam = 1})
lua_marker('t', props_marker {feat_remove_spam = 1})

}}
SHUFFLE: GPF
KITEM: a = randbook disc:necromancy slevels:16 / randbook disc:conjuration slevels:16 / \
        randbook disc:summoning slevels:16 / randbook disc:charms slevels:16 / \
        randbook disc:hexes slevels:16 / randbook disc:translocation slevels:16 / \
        randbook disc:transmutation slevels:16 / randbook disc:fire slevels:16 / \
        randbook disc:air slevels:16 / randbook disc:earth slevels:16 / \
        randbook disc:ice slevels:16 / randbook disc:poison slevels:16
KITEM: B = triple sword good_item randart no_pickup / double sword good_item randart no_pickup / \
        great mace good_item randart no_pickup / eveningstar good_item randart no_pickup / \
        bardiche good_item randart no_pickup / demon trident good_item randart no_pickup / \
        executioner's axe good_item randart no_pickup / broad axe good_item randart no_pickup / \
        lajatang good_item randart no_pickup / quick blade good_item randart no_pickup / \
        longbow good_item randart no_pickup / triple crossbow good_item randart no_pickup / \
        fustibalus good_item randart no_pickup
KITEM: b = large rock q:20 no_pickup / javelin ego:silver q:20 no_pickup / \
        sling bullet q:100 no_pickup / dart ego:curare q:20 no_pickup
KITEM: C = crystal plate armour good_item randart no_pickup / \
        robe good_item randart no_pickup / \
        fire dragon scales good_item randart no_pickup / \
        ice dragon scales good_item randart no_pickup / \
        storm dragon scales good_item randart no_pickup / \
        pearl dragon scales good_item randart no_pickup / \
        swamp dragon scales good_item randart no_pickup / \
        steam dragon scales good_item randart no_pickup / \
        acid dragon scales good_item randart no_pickup / \
        shadow dragon scales good_item randart no_pickup / \
        quicksilver dragon scales good_item randart no_pickup
KITEM: c = pair of gloves good_item randart no_pickup / \
        pair of boots good_item randart no_pickup / \
        helmet good_item randart no_pickup / \
        cloak good_item randart no_pickup / \
        naga barding good_item randart no_pickup / \
        centaur barding good_item randart no_pickup / \
        large shield good_item randart no_pickup
KITEM: D = any randart jewellery no_pickup
: golemforge_appearance(_G)
: set_feature_name("crystal_wall", "wall of crystal")
: set_feature_name("lava", "arcane furnace")
: set_feature_name("clear_permarock_wall", "strange container")
MAP                       
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XxxxxxXXxxxxxxxxxxxxxXXXXXXXXXXXXXXXXXXXxxxxxxxxxxxxxXXXXXXXX
XxA..xxxx321.....123xxXXXXXXXXXXXXXXXXXxx321.....123xxXXXXXXX
Xx<...+hhhh.......123xxXXXXXXXXXXXXXXXxx321.......123xxXXXXXX
Xx...xx321.........123xxXXXXXXXXXXXXXxx321...333...123xxXXXXX
Xxxxxx321.......23..123xxXXXXXXXXXXXxx321....3e3....123xxXXXX
XXXxx321........13e..123xxXXXXXXXXXxx321.....333.....123xxXXX
XXxx321.........n.....123xxxxxtxxxxx321...............123xxXX
Xxx321.................1222222_2222221.................123xxX
xx321...23...LLL........1111111111111........LLL...32...123xX
xx321...31n.LLLLL...........................LLLLL..13e..123xX
Xx321...e...LLmLL.......i....2221...i.......LLmLL..n....123xX
Xx321.......LLLLL...222..S..n2P2n..S..222...LLLLL.......123xX
Xx321........LLL...222......1222.......222...LLL........123xX
Xxx321.............2G2.................2F2.............123xxX
XXxx321...21n......222.................222......n12...123xxXX
XXXxx321..33......222.......i.S.i.......222......33..123xxXXX
XXXXxx321..e............1111111111111.............e.123xxXXXX
XXXXXxx321..i..........111L2222222m111..........i..123xxXXXXX
XXXXXXxx321....111...i11222233333222211i...111....123xxXXXXXX
XXXXXXXx3211..11111..1122m233mmm332m2211..11111..1123xXXXXXXX
XXXXXXXxxt_1..1nSn1..1m2mm23mmmmm32mm2m1..1nSn1..1_txxXXXXXXX
XXXXXXXx3211..11111..1122m233mmm332m2211..11111..1123xxXXXXXX
XXXXXXxx321....111...i11222233333222211i...111....123xxXXXXXX
XXXXXxx321..i..........111m2222222L111..........i..123xxXXXXX
XXXXxx321...............1111111111111...............123xxXXXX
XXXxx321..33e....222........i.S.i........222....e33..123xxXXX
XXxx321...21n.....222...................222.....n12...123xxXX
Xxx321............2F2...................2G2............123xxX
Xx321........LLL..222.......1222........222..LLL........123xX
xx321.......LLLLL..222...S..n2P2n..S...222..LLLLL.......123xX
Xx321.......LLmLL.......i....2221...i.......LLmLL.......123xX
Xx321.......LLLLL..32...................32..LLLLL.......123xX
xx321...33e..LLL..n13...1222222222221...31n..LLL..e33...123xX
Xxx321.n12..........e..1222222_2222221..e..........21n.123xxX
XXxx321...............123xxxxxtxxxxx321...............123xxXX
XXXxx321.....333.....123xxXXXxxxXXXxx321.....333.....123xx<xX
XXXXxx321....3e3....123xxXXXXXXXXXXXxx321....3e3....123xxxDxX
XXXXXxx321...333...123xxXXXXXXXXXXXXXxx321...333...123xxBbDxX
XXXXXXxx321.......123xxXXXXXXXXXXXXXXXxx321.......hhhh+aaBcxX
XXXXXXXxx321.....123xxXXXXXXXXXXXXXXXXXxx321.....123xxxaBbcxX
XXXXXXXXxxxxxxxxxxxxxXXXXXXXXXXXXXXXXXXXxxxxxxxxxxxxxxxBbCCxX
XXXXXXXXxxxxxxxxxxxxxXXXXXXXXXXXXXXXXXXXxxxxxxxxxxxxxDDccCCxX
XXXXXXXXxxxxxxxxxxxxxXXXXXXXXXXXXXXXXXXXxxxxxxxxxxxxxxxxxxxxX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
ENDMAP